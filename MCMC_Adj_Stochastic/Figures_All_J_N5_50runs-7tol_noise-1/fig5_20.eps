%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The MathWorks, Inc. Version 7.14.0.739 (R2012a). Operating System: Microsoft Windows 7.
%%Title: Figures_All_J_N5_50runs-7tol_noise-1\fig5_20.eps
%%CreationDate: 04/14/2015  08:34:41
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:    69   215   552   602
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    69   215   552   602
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0204 7344 csm

  631   110  5790  4650 MR c np
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6913 5185 PR
6 w
0 4225 5356 0 0 -4225 899 4614 4 MP
PP
-5356 0 0 4225 5356 0 0 -4225 899 4614 5 MP stroke
4 w
DO
SO
6 w
0 sg
 899  389 mt 6255  389 L
 899 4614 mt 6255 4614 L
6255 4614 mt 6255  389 L
 899 4614 mt  899  389 L
 899 4614 mt 6255 4614 L
 899 4614 mt  899  389 L
 899 4614 mt  899 4560 L
 899  389 mt  899  442 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 713 4759 mt 
(-0.05) s
1434 4614 mt 1434 4560 L
1434  389 mt 1434  442 L
1248 4759 mt 
(-0.04) s
1970 4614 mt 1970 4560 L
1970  389 mt 1970  442 L
1784 4759 mt 
(-0.03) s
2505 4614 mt 2505 4560 L
2505  389 mt 2505  442 L
2319 4759 mt 
(-0.02) s
3041 4614 mt 3041 4560 L
3041  389 mt 3041  442 L
2855 4759 mt 
(-0.01) s
3577 4614 mt 3577 4560 L
3577  389 mt 3577  442 L
3544 4759 mt 
(0) s
4112 4614 mt 4112 4560 L
4112  389 mt 4112  442 L
3996 4759 mt 
(0.01) s
4648 4614 mt 4648 4560 L
4648  389 mt 4648  442 L
4532 4759 mt 
(0.02) s
5183 4614 mt 5183 4560 L
5183  389 mt 5183  442 L
5067 4759 mt 
(0.03) s
5719 4614 mt 5719 4560 L
5719  389 mt 5719  442 L
5603 4759 mt 
(0.04) s
6255 4614 mt 6255 4560 L
6255  389 mt 6255  442 L
6139 4759 mt 
(0.05) s
 899 4614 mt  952 4614 L
6255 4614 mt 6201 4614 L
 798 4658 mt 
(0) s
 899 4191 mt  952 4191 L
6255 4191 mt 6201 4191 L
 631 4235 mt 
(0.05) s
 899 3769 mt  952 3769 L
6255 3769 mt 6201 3769 L
 698 3813 mt 
(0.1) s
 899 3346 mt  952 3346 L
6255 3346 mt 6201 3346 L
 631 3390 mt 
(0.15) s
 899 2924 mt  952 2924 L
6255 2924 mt 6201 2924 L
 698 2968 mt 
(0.2) s
 899 2501 mt  952 2501 L
6255 2501 mt 6201 2501 L
 631 2545 mt 
(0.25) s
 899 2078 mt  952 2078 L
6255 2078 mt 6201 2078 L
 698 2122 mt 
(0.3) s
 899 1656 mt  952 1656 L
6255 1656 mt 6201 1656 L
 631 1700 mt 
(0.35) s
 899 1234 mt  952 1234 L
6255 1234 mt 6201 1234 L
 698 1278 mt 
(0.4) s
 899  811 mt  952  811 L
6255  811 mt 6201  811 L
 631  855 mt 
(0.45) s
 899  389 mt  952  389 L
6255  389 mt 6201  389 L
 698  433 mt 
(0.5) s
 899  389 mt 6255  389 L
 899 4614 mt 6255 4614 L
6255 4614 mt 6255  389 L
 899 4614 mt  899  389 L
gs 899 389 5357 4226 MR c np
DD
24 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
268 0 268 0 268 1 268 19 267 392 268 1319 268 1110 268 680 
268 330 267 0 268 -330 268 -680 268 -1110 268 -1319 267 -392 268 -19 
268 -1 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 3 268 40 267 428 268 1219 268 1141 268 726 
268 352 267 0 268 -352 268 -726 268 -1141 268 -1219 267 -428 268 -40 
268 -3 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 4 268 48 267 455 268 1182 268 1023 268 652 
268 321 267 0 268 -321 268 -652 268 -1023 268 -1182 267 -455 268 -48 
268 -4 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 1 268 20 267 410 268 1302 268 1066 268 657 
268 321 267 0 268 -321 268 -657 268 -1066 268 -1302 267 -410 268 -20 
268 -1 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 3 268 31 267 396 268 1267 268 1165 268 724 
268 350 267 0 268 -350 268 -724 268 -1165 268 -1267 267 -396 268 -31 
268 -3 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 1 268 25 267 407 268 1289 268 1097 268 678 
268 329 267 0 268 -329 268 -678 268 -1097 268 -1289 267 -407 268 -25 
268 -1 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 3 268 47 267 476 268 1168 268 1048 268 680 
268 333 267 0 268 -333 268 -680 268 -1048 268 -1168 267 -476 268 -47 
268 -3 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 1 268 27 267 415 268 1272 268 1122 268 699 
268 339 267 0 268 -339 268 -699 268 -1122 268 -1272 267 -415 268 -27 
268 -1 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 2 268 28 267 421 268 1266 268 1083 268 676 
268 329 267 0 268 -329 268 -676 268 -1083 268 -1266 267 -421 268 -28 
268 -2 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 2 268 47 267 498 268 1155 268 1017 268 663 
268 326 267 0 268 -326 268 -663 268 -1017 268 -1155 267 -498 268 -47 
268 -2 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 2 268 37 267 441 268 1221 268 1104 268 703 
268 342 267 0 268 -342 268 -703 268 -1104 268 -1221 267 -441 268 -37 
268 -2 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 4 268 50 267 488 268 1152 268 985 268 637 
268 313 267 0 268 -313 268 -637 268 -985 268 -1152 267 -488 268 -50 
268 -4 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 2 268 41 267 468 268 1194 268 1024 268 653 
268 321 267 0 268 -321 268 -653 268 -1024 268 -1194 267 -468 268 -41 
268 -2 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 2 268 32 267 415 268 1254 268 1149 268 722 
268 349 267 0 268 -349 268 -722 268 -1149 268 -1254 267 -415 268 -32 
268 -2 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 3 268 46 267 447 268 1191 268 1107 268 714 
268 348 267 0 268 -348 268 -714 268 -1107 268 -1191 267 -447 268 -46 
268 -3 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 3 268 40 267 472 268 1191 268 993 268 631 
268 311 267 0 268 -311 268 -631 268 -993 268 -1191 267 -472 268 -40 
268 -3 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 5 268 51 267 449 268 1171 268 1093 268 706 
268 345 267 0 268 -345 268 -706 268 -1093 268 -1171 267 -449 268 -51 
268 -5 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 2 268 29 267 420 268 1259 268 1121 268 702 
268 341 267 0 268 -341 268 -702 268 -1121 268 -1259 267 -420 268 -29 
268 -2 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 1 268 22 267 404 268 1298 268 1100 268 676 
268 329 267 0 268 -329 268 -676 268 -1100 268 -1298 267 -404 268 -22 
268 -1 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 1 268 11 267 324 268 1403 268 1167 268 689 
268 333 267 0 268 -333 268 -689 268 -1167 268 -1403 267 -324 268 -11 
268 -1 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 0 268 4 267 346 268 1409 268 1152 268 688 
268 331 267 0 268 -331 268 -688 268 -1152 268 -1409 267 -346 268 -4 
268 0 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 0 268 14 267 349 268 1359 268 1245 268 748 
268 356 267 0 268 -356 268 -748 268 -1245 268 -1359 267 -349 268 -14 
268 0 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 7 268 59 267 441 268 1150 268 1113 268 727 
268 355 267 0 268 -355 268 -727 268 -1113 268 -1150 267 -441 268 -59 
268 -7 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 5 268 53 267 427 268 1178 268 1144 268 738 
268 358 267 0 268 -358 268 -738 268 -1144 268 -1178 267 -427 268 -53 
268 -5 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 6 268 56 267 427 268 1169 268 1129 268 729 
268 354 267 0 268 -354 268 -729 268 -1129 268 -1169 267 -427 268 -56 
268 -6 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 2 268 34 267 384 268 1262 268 1245 268 779 
268 372 267 0 268 -372 268 -779 268 -1245 268 -1262 267 -384 268 -34 
268 -2 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 5 268 72 267 506 268 1087 268 996 268 666 
268 330 267 0 268 -330 268 -666 268 -996 268 -1087 267 -506 268 -72 
268 -5 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 2 268 23 267 409 268 1294 268 1036 268 636 
268 312 267 0 268 -312 268 -636 268 -1036 268 -1294 267 -409 268 -23 
268 -2 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 4 268 45 267 428 268 1207 268 1093 268 693 
268 337 267 0 268 -337 268 -693 268 -1093 268 -1207 267 -428 268 -45 
268 -4 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 1 268 15 267 314 268 1390 268 1230 268 722 
268 346 267 0 268 -346 268 -722 268 -1230 268 -1390 267 -314 268 -15 
268 -1 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 1 268 23 267 448 268 1259 268 1056 268 664 
268 324 267 0 268 -324 268 -664 268 -1056 268 -1259 267 -448 268 -23 
268 -1 268 0 268 0 1032 4613 20 MP stroke
268 0 268 1 268 8 268 65 267 410 268 1138 268 1209 268 798 
268 386 267 0 268 -386 268 -798 268 -1209 268 -1138 267 -410 268 -65 
268 -8 268 -1 268 0 1032 4613 20 MP stroke
268 0 268 0 268 2 268 23 267 372 268 1322 268 1112 268 673 
268 327 267 0 268 -327 268 -673 268 -1112 268 -1322 267 -372 268 -23 
268 -2 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 0 268 13 267 421 268 1315 268 1030 268 634 
268 311 267 0 268 -311 268 -634 268 -1030 268 -1315 267 -421 268 -13 
268 0 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 2 268 28 267 402 268 1277 268 1142 268 710 
268 343 267 0 268 -343 268 -710 268 -1142 268 -1277 267 -402 268 -28 
268 -2 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 3 268 61 267 498 268 1120 268 1038 268 691 
268 340 267 0 268 -340 268 -691 268 -1038 268 -1120 267 -498 268 -61 
268 -3 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 4 268 55 267 476 268 1148 268 1025 268 665 
268 328 267 0 268 -328 268 -665 268 -1025 268 -1148 267 -476 268 -55 
268 -4 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 5 268 48 267 405 268 1201 268 1194 268 762 
268 367 267 0 268 -367 268 -762 268 -1194 268 -1201 267 -405 268 -48 
268 -5 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 0 268 21 267 446 268 1267 268 1073 268 674 
268 328 267 0 268 -328 268 -674 268 -1073 268 -1267 267 -446 268 -21 
268 0 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 4 268 48 267 481 268 1163 268 983 268 631 
268 312 267 0 268 -312 268 -631 268 -983 268 -1163 267 -481 268 -48 
268 -4 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 0 268 8 267 380 268 1363 268 1122 268 680 
268 329 267 0 268 -329 268 -680 268 -1122 268 -1363 267 -380 268 -8 
268 0 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 0 268 5 267 336 268 1419 268 1124 268 667 
268 324 267 0 268 -324 268 -667 268 -1124 268 -1419 267 -336 268 -5 
268 0 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 7 268 58 267 424 268 1156 268 1190 268 782 
268 379 267 0 268 -379 268 -782 268 -1190 268 -1156 267 -424 268 -58 
268 -7 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 3 268 35 267 422 268 1239 268 1105 268 694 
268 337 267 0 268 -337 268 -694 268 -1105 268 -1239 267 -422 268 -35 
268 -3 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 1 268 16 267 395 268 1323 268 1112 268 681 
268 330 267 0 268 -330 268 -681 268 -1112 268 -1323 267 -395 268 -16 
268 -1 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 0 268 13 267 420 268 1315 268 1056 268 651 
268 317 267 0 268 -317 268 -651 268 -1056 268 -1315 267 -420 268 -13 
268 0 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 1 268 17 267 361 268 1346 268 1181 268 714 
268 343 267 0 268 -343 268 -714 268 -1181 268 -1346 267 -361 268 -17 
268 -1 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 2 268 40 267 443 268 1212 268 1110 268 710 
268 345 267 0 268 -345 268 -710 268 -1110 268 -1212 267 -443 268 -40 
268 -2 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 4 268 58 267 488 268 1134 268 1010 268 661 
268 325 267 0 268 -325 268 -661 268 -1010 268 -1134 267 -488 268 -58 
268 -4 268 0 268 0 1032 4613 20 MP stroke
268 0 268 0 268 1 268 15 267 368 268 1355 268 1111 268 672 
268 326 267 0 268 -326 268 -672 268 -1111 268 -1355 267 -368 268 -15 
268 -1 268 0 268 0 1032 4613 20 MP stroke
SO
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
268 0 268 0 268 3 268 34 267 421 268 1247 268 1102 268 692 
268 336 267 0 268 -336 268 -692 268 -1102 268 -1247 267 -421 268 -34 
268 -3 268 0 268 0 1032 4613 20 MP stroke
gr

24 w
c9
0 sg
2309  294 mt 
(Crossections of the target solution and its mean) s
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
